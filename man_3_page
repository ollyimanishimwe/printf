.\" Manpage for _printf.
.\" Contact nshimyumukizachristian54@gmail.com to correct errors or typos.
.TH man 3 "19 March 2021" "1.0" "_printf man page"
.SH NAME
_printf \- formatted output conversion
.SH SYNOPSIS
#include "holberton.h"

#include <stdarg.h>

.B int _printf(const char *format, ...);
.SH DESCRIPTION
The functions in _printf produce output according to format specifiers described
below. The ouput is
.I stdout
the standard output stream;
.SS FORMAT OF FORMAT STRING
The format string given handles zero or more directives: ordinary characters
(non specified (%)), are printed unchanged to the output stream. Conversion
specifiers are introduced w/ (%_specifier). Each conversion specification is
introduced by the characer %, and ends with a
.I conversion specifier.
At this time there is no
.I flags,
.I field width, precision,
and
.I length modifier.
The arguments my compliment properly with provided specifier. The arguments are
used in the order given.
.SH Conversion Specifiers
A character that specifies the type of conversion to be applied.
.TP
.BR \-d, i\fr
The int argument is converted to signed decimal notation.
.TP
.BR \-c\fr
The int argument is converted to an
.I unsigned char,
and the resulting character is written.
.TP
.BR \-s\fr
The const char * argument is expected to be a pointer to an array of
.I character type
(pointer to a string). Characters from the array are written up to
(but not including) a terminating null byte ('\\0').
.TP
.BR \-%\fr
A % is written. No argument is converted. The complete conversion
specification is '%%'.
.SH SEE ALSO
printf(1), asprintf(3).
.SH BUGS
No known bugs.
.SH AUTHOR
Christian Nshimyumukiza and Olly Imanishimwe
